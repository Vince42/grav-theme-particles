{% set grid_size = theme_var('grid-size') %}

{# create a page collection from headers which are unfortunately not proper page collections, see https://github.com/getgrav/grav-plugin-admin/issues/2280 #}
{% if page.header.modules %}

    {% set modules = page.header.modules %}
    {% if modules.members %}
        {% set items_filter = {} %}
        {% if modules.members.children %}
            {% set items_filter = items_filter|merge(modules.members.children|map(p => {'@page.children': p})) %}
        {% endif %}
        {% if modules.members.descendants %}
            {% set items_filter = items_filter|merge(modules.members.descendants|map(p => {'@page.descendants': p})) %}
        {% endif %}
        {% if modules.members.modules %}
            {% set items_filter = items_filter|merge(modules.members.modules|map(m => {'@page.modular': m})) %}
        {% endif %}

        {% if items_filter is not empty %}
            {% set pages_collection = page.collection({'items': items_filter}) %}
        {% endif %}

        {# use page.intersect() for the taxonomy selections (rather than page.merge()) #}
        {% if modules.members.taxonomy %}
            {% set taxonomy_collection = page.collection({'items': {'@taxonomy': modules.members.taxonomy}}) %}
            {% set pages_collection = ( pages_collection is defined ? pages_collection.intersect(taxonomy_collection) : taxonomy_collection )  %}
        {% endif %}

        {# set collection options using collection methods because we needed to instantiate the collection to run intersect() on any taxonomy parameters specified in frontmatter #}
        {% if pages_collection is defined %}
            {% if modules.order %}
                {% do pages_collection.order(modules.order.by, modules.order.dir|default('asc')) %}
            {% endif %}
            {% if modules.limit %}
                {% do pages_collection.slice(0, modules.limit) %}
            {% endif %}
        {% endif %}

    {% endif %}

{% endif %}

{% block body %}
    {% if pages_collection is defined %}
        {% do assets.addCss('theme://css/bricklayer.css') %}
        {% do assets.add('theme://js/bricklayer.min.js') %}

        {% set grid_id = unique_id() %}

        <section id="body-wrapper" class="section blog-listing">
            <section class="container {{ grid_size }}">

            {% embed 'partials/layout.html.twig' %}
                {% block item %}
                    <div id="{{ grid_id }}" class="bricklayer">
                    {% for page in pages_collection %}
                        {% include 'partials/page-summary.html.twig' with {'page': page} %}
                    {% endfor %}
                    </div>
                {% endblock %}
            {% endembed %}
            </section>
        </section>

        {% script at 'bottom' %}
            $(document).ready ( function() {
                var $grid = $('#{{ grid_id }}');
                if ($grid.length == 1) {
                    var bricklayer = new Bricklayer($grid[0]);
                }
            });
        {% endscript %}
    {% endif %}
{% endblock %}
